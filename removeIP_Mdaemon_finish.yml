- name: Remove IP from MDaemon blacklist and check logs
  hosts: remote
  gather_facts: no
  vars:
    ip_to_remove: "{{ ip_to_remove | default('') }}"

  tasks:
    - name: Kiểm tra biến IP có được truyền vào không
      fail:
        msg: "❌ Không có IP nào được cung cấp. Hãy gửi biến ip_to_remove qua API."
      when: ip_to_remove | length == 0

    - name: Validate IP format
      fail:
        msg: "❌ IP nhập vào không hợp lệ. Vui lòng kiểm tra lại."
      when: ip_to_remove is not match('^\d+\.\d+\.\d+\.\d+$')

    - name: Check if blacklist file exists
      win_stat:
        path: C:\MDaemon\Data\DSBlacklist.dat
      register: blacklist_file

    - name: Verify if IP is in blacklist
      win_shell: |
        $blacklistFile = "C:\\MDaemon\\Data\\DSBlacklist.dat"
        $ipToRemove = "{{ ip_to_remove }}"
        if (Select-String -Path $blacklistFile -Pattern "\b$ipToRemove\b") {
            Write-Output "Found"
        } else {
            Write-Output "NotFound"
        }
      register: ip_check
      when: blacklist_file.stat.exists

    - name: Stop playbook if IP is not in blacklist
      fail:
        msg: "✅ IP {{ ip_to_remove }} không bị chặn, không cần xóa."
      when: ip_check.stdout == "NotFound"

    - name: Remove IP from blacklist
      win_shell: |
        $blacklistFile = "C:\\MDaemon\\Data\\DSBlacklist.dat"
        $ipToRemove = "{{ ip_to_remove }}"
        $blacklistContent = Get-Content $blacklistFile -Raw
        $filteredContent = $blacklistContent -replace ".*\b$ipToRemove\b.*\r?\n?", ""
        [System.IO.File]::WriteAllText($blacklistFile, $filteredContent, [System.Text.Encoding]::Default)
        Write-Output "Đã xóa IP $ipToRemove khỏi danh sách blacklist."
      register: remove_ip_result

    - name: Show IP removal result
      debug:
        msg: "{{ remove_ip_result.stdout_lines }}"

    - name: Search logs for blocked IP reasons
      win_shell: |
        $logDir = "C:\\MDaemon\\Logs"
        $ipToRemove = "{{ ip_to_remove }}"
        $logFiles = Get-ChildItem -Path $logDir -Filter "MDaemon-*-all.log"
        $logFound = $false
        foreach ($logFile in $logFiles) {
            $logPath = $logFile.FullName
            $logEntries = Select-String -Path $logPath -Pattern $ipToRemove | Where-Object { $_ -match "authentication attempt from $ipToRemove" -or $_ -match "Failed" }
            if ($logEntries) {
                $logFound = $true
                Write-Output "Log tìm thấy trong file: $logPath"
                $logEntries | ForEach-Object { Write-Output $_.Line }
                Write-Output "-------------------------------------------"
            }
        }
        if (-not $logFound) {
            Write-Output "✅ Không tìm thấy log liên quan đến IP {{ ip_to_remove }}."
        }
      register: log_search

    - name: Show log search result
      debug:
        msg: "{{ log_search.stdout_lines }}"
      when: log_search.stdout is defined
