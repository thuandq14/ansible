---
- name: Check uptime of remote server
  hosts: all-linux
  gather_facts: no
  vars:
    bot_token: "<YOUR_BOT_TOKEN>"  # Thay b·∫±ng bot token c·ªßa b·∫°n
    chat_id: "-4132281180"         # Chat ID c·ªßa b·∫°n
    telegram_api_url: "https://api.telegram.org/bot{{ bot_token }}/sendMessage"

  tasks:
    - name: Get Inventory g·ªëc
      set_fact:
        inventory_goc: "{{ group_names | intersect(groups.keys()) | first | default('Unknown') }}"
      when: ansible_play_hosts is defined

    - name: Run uptime command
      command: uptime
      register: uptime_result
      ignore_errors: yes  # Ti·∫øp t·ª•c d√π l·ªánh uptime th·∫•t b·∫°i

    - name: Ghi nh·∫≠n host unreachable
      set_fact:
        unreachable_hosts: "{{ ansible_play_hosts_all | difference(ansible_play_hosts) }}"
      run_once: yes
      delegate_to: localhost

    - name: G·ª≠i c·∫£nh b√°o Telegram khi host unreachable
      uri:
        url: "{{ telegram_api_url }}"
        method: POST
        body_format: json
        body:
          chat_id: "{{ chat_id }}"
          text: |
            üö® *C·∫¢NH B√ÅO HOST KH√îNG K·∫æT N·ªêI* üö®
            ‚ùå Host kh√¥ng k·∫øt n·ªëi: `{{ item }}`
            üè∑ Inventory g·ªëc: `{{ hostvars[item].inventory_goc | default('Unknown') }}`
            üñ• H·ªá ƒëi·ªÅu h√†nh: `{{ 'Windows' if 'win' in hostvars[item].group_names else 'Linux' }}`
          parse_mode: "Markdown"
        headers:
          Content-Type: "application/json"
      loop: "{{ unreachable_hosts }}"
      run_once: yes
      delegate_to: localhost
      ignore_errors: yes  # Ti·∫øp t·ª•c d√π g·ª≠i th√¥ng b√°o th·∫•t b·∫°i

    - name: G·ª≠i th√¥ng b√°o Telegram sau khi ch·∫°y (th√†nh c√¥ng ho·∫∑c th·∫•t b·∫°i)
      uri:
        url: "{{ telegram_api_url }}"
        method: POST
        body_format: json
        body:
          chat_id: "{{ chat_id }}"
          text: |
            üìù *K·∫æT QU·∫¢ CH·∫†Y ANSIBLE* üìù
            üîπ Host: `{{ inventory_hostname }}`
            üè∑ Inventory g·ªëc: `{{ inventory_goc | default('Unknown') }}`
            üñ• H·ªá ƒëi·ªÅu h√†nh: `{{ 'Windows' if 'win' in group_names else 'Linux' }}`
            {% if uptime_result.rc is defined and uptime_result.rc == 0 %}
            ‚úÖ *Th√†nh c√¥ng*: `{{ uptime_result.stdout }}`
            {% else %}
            ‚ùå *L·ªói*: `{{ uptime_result.stderr | default('Host kh√¥ng ph·∫£n h·ªìi ho·∫∑c l·ªói kh√¥ng x√°c ƒë·ªãnh') }}`
            {% endif %}
          parse_mode: "Markdown"
        headers:
          Content-Type: "application/json"
      delegate_to: localhost
      ignore_errors: yes  # Ti·∫øp t·ª•c d√π g·ª≠i th√¥ng b√°o th·∫•t b·∫°i
      when: inventory_hostname in ansible_play_hosts  # Ch·ªâ g·ª≠i cho host ƒë√£ k·∫øt n·ªëi ƒë∆∞·ª£c

    - name: G·ª≠i th√¥ng b√°o t√≥m t·∫Øt n·∫øu kh√¥ng c√≥ host n√†o ph·∫£n h·ªìi
      uri:
        url: "{{ telegram_api_url }}"
        method: POST
        body_format: json
        body:
          chat_id: "{{ chat_id }}"
          text: |
            üö® *T√ìM T·∫ÆT CH·∫†Y ANSIBLE* üö®
            ‚ùå Kh√¥ng c√≥ host n√†o ph·∫£n h·ªìi!
            üìã T·ªïng s·ªë host: `{{ ansible_play_hosts_all | length }}`
            üìã Host kh√¥ng k·∫øt n·ªëi: `{{ unreachable_hosts | join(', ') }}`
          parse_mode: "Markdown"
        headers:
          Content-Type: "application/json"
      delegate_to: localhost
      ignore_errors: yes
      run_once: yes
      when: ansible_play_hosts | length == 0  # Ch·ªâ ch·∫°y n·∫øu kh√¥ng c√≥ host n√†o ph·∫£n h·ªìi
